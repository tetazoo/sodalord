.\" Automatically generated by Pod::Man v1.37, Pod::Parser v1.14
.\"
.\" Standard preamble:
.\" ========================================================================
.de Sh \" Subsection heading
.br
.if t .Sp
.ne 5
.PP
\fB\\$1\fR
.PP
..
.de Sp \" Vertical space (when we can't use .PP)
.if t .sp .5v
.if n .sp
..
.de Vb \" Begin verbatim text
.ft CW
.nf
.ne \\$1
..
.de Ve \" End verbatim text
.ft R
.fi
..
.\" Set up some character translations and predefined strings.  \*(-- will
.\" give an unbreakable dash, \*(PI will give pi, \*(L" will give a left
.\" double quote, and \*(R" will give a right double quote.  | will give a
.\" real vertical bar.  \*(C+ will give a nicer C++.  Capital omega is used to
.\" do unbreakable dashes and therefore won't be available.  \*(C` and \*(C'
.\" expand to `' in nroff, nothing in troff, for use with C<>.
.tr \(*W-|\(bv\*(Tr
.ds C+ C\v'-.1v'\h'-1p'\s-2+\h'-1p'+\s0\v'.1v'\h'-1p'
.ie n \{\
.    ds -- \(*W-
.    ds PI pi
.    if (\n(.H=4u)&(1m=24u) .ds -- \(*W\h'-12u'\(*W\h'-12u'-\" diablo 10 pitch
.    if (\n(.H=4u)&(1m=20u) .ds -- \(*W\h'-12u'\(*W\h'-8u'-\"  diablo 12 pitch
.    ds L" ""
.    ds R" ""
.    ds C` ""
.    ds C' ""
'br\}
.el\{\
.    ds -- \|\(em\|
.    ds PI \(*p
.    ds L" ``
.    ds R" ''
'br\}
.\"
.\" If the F register is turned on, we'll generate index entries on stderr for
.\" titles (.TH), headers (.SH), subsections (.Sh), items (.Ip), and index
.\" entries marked with X<> in POD.  Of course, you'll have to process the
.\" output yourself in some meaningful fashion.
.if \nF \{\
.    de IX
.    tm Index:\\$1\t\\n%\t"\\$2"
..
.    nr % 0
.    rr F
.\}
.\"
.\" For nroff, turn off justification.  Always turn off hyphenation; it makes
.\" way too many mistakes in technical documents.
.hy 0
.if n .na
.\"
.\" Accent mark definitions (@(#)ms.acc 1.5 88/02/08 SMI; from UCB 4.2).
.\" Fear.  Run.  Save yourself.  No user-serviceable parts.
.    \" fudge factors for nroff and troff
.if n \{\
.    ds #H 0
.    ds #V .8m
.    ds #F .3m
.    ds #[ \f1
.    ds #] \fP
.\}
.if t \{\
.    ds #H ((1u-(\\\\n(.fu%2u))*.13m)
.    ds #V .6m
.    ds #F 0
.    ds #[ \&
.    ds #] \&
.\}
.    \" simple accents for nroff and troff
.if n \{\
.    ds ' \&
.    ds ` \&
.    ds ^ \&
.    ds , \&
.    ds ~ ~
.    ds /
.\}
.if t \{\
.    ds ' \\k:\h'-(\\n(.wu*8/10-\*(#H)'\'\h"|\\n:u"
.    ds ` \\k:\h'-(\\n(.wu*8/10-\*(#H)'\`\h'|\\n:u'
.    ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'^\h'|\\n:u'
.    ds , \\k:\h'-(\\n(.wu*8/10)',\h'|\\n:u'
.    ds ~ \\k:\h'-(\\n(.wu-\*(#H-.1m)'~\h'|\\n:u'
.    ds / \\k:\h'-(\\n(.wu*8/10-\*(#H)'\z\(sl\h'|\\n:u'
.\}
.    \" troff and (daisy-wheel) nroff accents
.ds : \\k:\h'-(\\n(.wu*8/10-\*(#H+.1m+\*(#F)'\v'-\*(#V'\z.\h'.2m+\*(#F'.\h'|\\n:u'\v'\*(#V'
.ds 8 \h'\*(#H'\(*b\h'-\*(#H'
.ds o \\k:\h'-(\\n(.wu+\w'\(de'u-\*(#H)/2u'\v'-.3n'\*(#[\z\(de\v'.3n'\h'|\\n:u'\*(#]
.ds d- \h'\*(#H'\(pd\h'-\w'~'u'\v'-.25m'\f2\(hy\fP\v'.25m'\h'-\*(#H'
.ds D- D\\k:\h'-\w'D'u'\v'-.11m'\z\(hy\v'.11m'\h'|\\n:u'
.ds th \*(#[\v'.3m'\s+1I\s-1\v'-.3m'\h'-(\w'I'u*2/3)'\s-1o\s+1\*(#]
.ds Th \*(#[\s+2I\s-2\h'-\w'I'u*3/5'\v'-.3m'o\v'.3m'\*(#]
.ds ae a\h'-(\w'a'u*4/10)'e
.ds Ae A\h'-(\w'A'u*4/10)'E
.    \" corrections for vroff
.if v .ds ~ \\k:\h'-(\\n(.wu*9/10-\*(#H)'\s-2\u~\d\s+2\h'|\\n:u'
.if v .ds ^ \\k:\h'-(\\n(.wu*10/11-\*(#H)'\v'-.4m'^\v'.4m'\h'|\\n:u'
.    \" for low resolution devices (crt and lpr)
.if \n(.H>23 .if \n(.V>19 \
\{\
.    ds : e
.    ds 8 ss
.    ds o a
.    ds d- d\h'-1'\(ga
.    ds D- D\h'-1'\(hy
.    ds th \o'bp'
.    ds Th \o'LP'
.    ds ae ae
.    ds Ae AE
.\}
.rm #[ #] #H #V #F C
.\" ========================================================================
.\"
.IX Title "Curses::UI::TextEditor 3"
.TH Curses::UI::TextEditor 3 "2003-10-15" "perl v5.8.3" "User Contributed Perl Documentation"
.SH "NAME"
Curses::UI::TextEditor \- Create and manipulate texteditor widgets
.SH "CLASS HIERARCHY"
.IX Header "CLASS HIERARCHY"
.Vb 4
\& Curses::UI::Widget
\& Curses::UI::Searchable
\&    |
\&    +----Curses::UI::TextEditor
.Ve
.SH "SYNOPSIS"
.IX Header "SYNOPSIS"
.Vb 3
\&    use Curses::UI;
\&    my $cui = new Curses::UI;
\&    my $win = $cui->add('window_id', 'Window');
.Ve
.PP
.Vb 5
\&    my $editor = $win->add(
\&        'myeditor', 'Editor',
\&        -vscrollbar => 1,
\&        -wrapping   => 1,
\&    );
.Ve
.PP
.Vb 2
\&    $editor->focus();
\&    my $text = $editor->get();
.Ve
.SH "DESCRIPTION"
.IX Header "DESCRIPTION"
Curses::UI::TextEditor is a widget that can be used to create 
a couple of different kinds of texteditors. These are:
.IP "* \fBmulti-line texteditor\fR" 4
.IX Item "multi-line texteditor"
This is a multi-line text editor with features like word\-wrapping,
maximum textlength and undo.
.IP "* \fBsingle-line texteditor\fR" 4
.IX Item "single-line texteditor"
The texteditor can be created as a single-line editor. 
Most of the features of the default texteditor will remain.
Only the multi-line specific options will not be
available (like moving up and down in the text).
.IP "* \fBread only texteditor\fR" 4
.IX Item "read only texteditor"
The texteditor can also be used in read only mode.
In this mode, the texteditor will function as a text
viewer. The user can walk through the text and 
search trough it.
.PP
See exampes/demo\-Curses::UI::TextEditor in the distribution
for a short demo of these.
.SH "STANDARD OPTIONS"
.IX Header "STANDARD OPTIONS"
\&\fB\-parent\fR, \fB\-x\fR, \fB\-y\fR, \fB\-width\fR, \fB\-height\fR, 
\&\fB\-pad\fR, \fB\-padleft\fR, \fB\-padright\fR, \fB\-padtop\fR, \fB\-padbottom\fR,
\&\fB\-ipad\fR, \fB\-ipadleft\fR, \fB\-ipadright\fR, \fB\-ipadtop\fR, \fB\-ipadbottom\fR,
\&\fB\-title\fR, \fB\-titlefullwidth\fR, \fB\-titlereverse\fR, \fB\-onfocus\fR,
\&\fB\-onblur\fR
.PP
For an explanation of these standard options, see 
Curses::UI::Widget.
.SH "WIDGET-SPECIFIC OPTIONS"
.IX Header "WIDGET-SPECIFIC OPTIONS"
.IP "* \fB\-text\fR < \s-1TEXT\s0 >" 4
.IX Item "-text < TEXT >"
This sets the initial text for the widget to \s-1TEXT\s0.
.IP "* \fB\-pos\fR < \s-1CURSOR_POSITION\s0 >" 4
.IX Item "-pos < CURSOR_POSITION >"
This sets the initial cursor position for the widget
to \s-1CURSOR_POSITION\s0. \fB\-pos\fR represents the character index within
\&\fB\-text\fR. By default this option is set to 0.
.IP "* \fB\-readonly\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-readonly < BOOLEAN >"
The texteditor widget will be created as a read only 
texteditor (which is also called a textviewer) if 
\&\s-1BOOLEAN\s0 is true. By default \s-1BOOLEAN\s0 is false.
.IP "* \fB\-singleline\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-singleline < BOOLEAN >"
The texteditor widget will be created as a single line
texteditor (which is also called a textentry) if 
\&\s-1BOOLEAN\s0 is true. By default \s-1BOOLEAN\s0 is false.
.IP "* \fB\-wrapping\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-wrapping < BOOLEAN >"
If \s-1BOOLEAN\s0 is true, the texteditor will have text wrapping
enabled. By default \s-1BOOLEAN\s0 is false.
.IP "* \fB\-showlines\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-showlines < BOOLEAN >"
If \s-1BOOLEAN\s0 is set to a true value, each editable line
in the editor will show a line to type on. By default
\&\s-1BOOLEAN\s0 is set to false.
.IP "* \fB\-maxlength\fR < \s-1VALUE\s0 >" 4
.IX Item "-maxlength < VALUE >"
This sets the maximum allowed length of the text to 
\&\s-1VALUE\s0. By default \s-1VALUE\s0 is set to 0, 
which means that the text may be infinitely long.
.IP "* \fB\-maxlines\fR < \s-1VALUE\s0 >" 4
.IX Item "-maxlines < VALUE >"
This sets the maximum allowed number of lines for the text 
to \s-1SCALAR\s0. By default \s-1VALUE\s0 is set to 0, which means that 
the text may contain an infinite number of lines.
.IP "* \fB\-password\fR < \s-1CHARACTER\s0 >" 4
.IX Item "-password < CHARACTER >"
Instead of showing the real text in the widget, every
character of the text will (on the screen) be replaced
by \s-1CHARACTER\s0. So creating a standard password field
can be done by setting:
.Sp
.Vb 1
\&    -password => '*'
.Ve
.IP "* \fB\-regexp\fR < \s-1REGEXP\s0 >" 4
.IX Item "-regexp < REGEXP >"
If characters are added to the texteditor, the new text
will be matched against \s-1REGEXP\s0. If the text does not match,
the change will be denied. This can for example be used to
force digit-only input on the texteditor:
.Sp
.Vb 1
\&    -regexp => '/^\ed*$/'
.Ve
.IP "* \fB\-undolevels\fR < \s-1VALUE\s0 >" 4
.IX Item "-undolevels < VALUE >"
This option determines how many undolevels should be kept
in memory for the texteditor widget. By default 10 levels
are kept. If this value is set to 0, the number of levels
is infinite.
.IP "* \fB\-showoverflow\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-showoverflow < BOOLEAN >"
If \s-1BOOLEAN\s0 is true, the text in the texteditor will be
padded by an overflow character ($) if there is text
outside the screen (like 'pico' does). By default 
\&\s-1BOOLEAN\s0 is true.
.IP "* \fB\-showhardreturns\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-showhardreturns < BOOLEAN >"
If \s-1BOOLEAN\s0 is true, hard returns will be made visible
by a diamond character. By default \s-1BOOLEAN\s0 is false.
.IP "* \fB\-homeonblur\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-homeonblur < BOOLEAN >"
If \s-1BOOLEAN\s0 is set to a true value, the cursor will move
to the start of the text if the widget loses focus.
.IP "* \fB\-toupper\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-toupper < BOOLEAN >"
If \s-1BOOLEAN\s0 is true, all entered text will be converted
to uppercase. By default \s-1BOOLEAN\s0 is false.
.IP "* \fB\-tolower\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-tolower < BOOLEAN >"
If \s-1BOOLEAN\s0 is true, all entered text will be converted
to lowercase. By default \s-1BOOLEAN\s0 is false.
.IP "* \fB\-onchange\fR < \s-1CODEREF\s0 >" 4
.IX Item "-onchange < CODEREF >"
This sets the onChange event handler for the texteditor widget.
If the text is changed by typing, the code in \s-1CODEREF\s0 will 
be executed.  It will get the widget reference as its argument.
.IP "* \fB\-reverse\fR < \s-1BOOLEAN\s0 >" 4
.IX Item "-reverse < BOOLEAN >"
Makes the text drawn in reverse font.
.SH "METHODS"
.IX Header "METHODS"
.IP "* \fBnew\fR ( \s-1OPTIONS\s0 )" 4
.IX Item "new ( OPTIONS )"
.PD 0
.IP "* \fBlayout\fR ( )" 4
.IX Item "layout ( )"
.IP "* \fBdraw\fR ( \s-1BOOLEAN\s0 )" 4
.IX Item "draw ( BOOLEAN )"
.IP "* \fBfocus\fR ( )" 4
.IX Item "focus ( )"
.IP "* \fBonFocus\fR ( \s-1CODEREF\s0 )" 4
.IX Item "onFocus ( CODEREF )"
.IP "* \fBonBlur\fR ( \s-1CODEREF\s0 )" 4
.IX Item "onBlur ( CODEREF )"
.PD
These are standard methods. See Curses::UI::Widget 
for an explanation of these.
.IP "* \fBtext\fR ( [\s-1TEXT\s0] )" 4
.IX Item "text ( [TEXT] )"
If \s-1TEXT\s0 is defined, this will set the text of the widget to \s-1TEXT\s0.
To see the change, the widget needs to be redrawn by the \fBdraw\fR method.
If \s-1TEXT\s0 is not defined, this method will return the current contents
of the texteditor.
.IP "* \fBget\fR ( )" 4
.IX Item "get ( )"
This method will call \fBtext\fR without any arguments, so it
will return the contents of the texteditor.
.IP "* \fBonChange\fR ( \s-1CODEREF\s0 )" 4
.IX Item "onChange ( CODEREF )"
This method can be used to set the \fB\-onchange\fR event handler
(see above) after initialization of the texteditor. 
.SH "DEFAULT BINDINGS"
.IX Header "DEFAULT BINDINGS"
There are different sets of bindings for each mode in which
this widget can be used. 
.Sh "All modes (editor, single line and read only)"
.IX Subsection "All modes (editor, single line and read only)"
.IP "* <\fBtab\fR>" 4
.IX Item "<tab>"
Call the 'returreturnn' routine. This will have the widget 
loose its focus.
.IP "* <\fBcursor-left\fR>, <\fB\s-1CTRL+B\s0\fR>" 4
.IX Item "<cursor-left>, <CTRL+B>"
Call the 'cursor\-left' routine: move the
cursor one position to the left.
.IP "* <\fBcursor-right\fR>, <\fB\s-1CTRL+F\s0\fR>" 4
.IX Item "<cursor-right>, <CTRL+F>"
Call the 'cursor\-right' routine: move the
cursor one position to the right.
.IP "* <\fBcursor-down\fR>, <\fB\s-1CTRL+N\s0\fR>" 4
.IX Item "<cursor-down>, <CTRL+N>"
Call the 'cursor\-down' routine: move the
cursor one line down.
.IP "* <\fBcursor-up\fR>, <\fB\s-1CTRL+P\s0\fR>" 4
.IX Item "<cursor-up>, <CTRL+P>"
Call the 'cursor\-up' routine: move the
cursor one line up.
.IP "* <\fBpage-up\fR>" 4
.IX Item "<page-up>"
Call the 'cursor\-pageup' routine: move the
cursor to the previous page.
.IP "* <\fBpage-down\fR>" 4
.IX Item "<page-down>"
Call the 'cursor\-pagedown' routine: move
the cursor to the next page.
.IP "* <\fBhome\fR>" 4
.IX Item "<home>"
Call the 'cursor\-home' routine: go to the
start of the text. 
.IP "* <\fBend\fR>" 4
.IX Item "<end>"
Call the 'cursor\-end' routine: go to the
end of the text. 
.IP "* <\fB\s-1CTRL+A\s0\fR>" 4
.IX Item "<CTRL+A>"
Call the 'cursor\-scrlinestart' routine: move the
cursor to the start of the current line.
.IP "* <\fB\s-1CTRL+E\s0\fR>" 4
.IX Item "<CTRL+E>"
Call the 'cursor\-scrlineend' routine: move the
cursor to the end of the current line.
.IP "* <\fB\s-1CTRL+W\s0\fR>" 4
.IX Item "<CTRL+W>"
Call the 'toggle\-wrapping' routine: toggle the
\&\-wrapping option of the texteditor.
.IP "* <\fB\s-1CTRL+R\s0\fR>" 4
.IX Item "<CTRL+R>"
Call the 'toggle\-showhardreturns' routine: toggle the
\&\-showhardreturns option of the texteditor.
.IP "* <\fB\s-1CTRL+T\s0\fR>" 4
.IX Item "<CTRL+T>"
Call the 'toggle\-showoverflow' routine: toggle the
\&\-showoverflow option of the texteditor.
.Sh "All edit modes (all but read only mode)"
.IX Subsection "All edit modes (all but read only mode)"
.IP "* <\fB\s-1CTRL+Y\s0\fR>, <\fB\s-1CTRL+X\s0\fR>" 4
.IX Item "<CTRL+Y>, <CTRL+X>"
Call the 'delete\-line' routine: Delete the current
line.
.IP "* <\fB\s-1CTRL+K\s0\fR>" 4
.IX Item "<CTRL+K>"
Call the 'delete\-till\-eol' routine: delete the text
from the current cursor position up to the end of
the current line.
.IP "* <\fB\s-1CTRL+U\s0\fR>" 4
.IX Item "<CTRL+U>"
Call the 'clear\-line' routine: clear the 
current line and move the cursor to the
start of this line.
.IP "* <\fB\s-1CTRL+D\s0\fR>" 4
.IX Item "<CTRL+D>"
Call the 'delete\-character' routine: delete the 
character that currently is under the cursor.
.IP "* <\fBbackspace\fR>" 4
.IX Item "<backspace>"
Call the 'backspace' routine: delete the character
this is before the current cursor position.
.IP "* <\fB\s-1CTRL+Z\s0\fR>" 4
.IX Item "<CTRL+Z>"
Call the 'undo' routine: undo the last change to
the text, up to \fB\-undolevels\fR levels.
.IP "* <\fB\s-1CTRL+V\s0\fR>" 4
.IX Item "<CTRL+V>"
Call the 'paste' routine: this will paste the 
last deleted text at the current cursor position.
.IP "* <\fBany other key\fR>" 4
.IX Item "<any other key>"
Call the 'add\-string' routine: the character
will be inserted in the text at the current
cursor position.
.Sh "Only for the read only mode"
.IX Subsection "Only for the read only mode"
.IP "* <\fBh\fR>" 4
.IX Item "<h>"
Call the 'cursor\-left' routine: move the
cursor one position to the left.
.IP "* <\fBl\fR>" 4
.IX Item "<l>"
Call the 'cursor\-right' routine: move the
cursor one position to the right.
.IP "* b<<k>>" 4
.IX Item "b<<k>>"
Call the 'cursor\-up' routine: move the
cursor one line up.
.IP "* b<<j>>" 4
.IX Item "b<<j>>"
Call the 'cursor\-down' routine: move the
cursor one line down.
.IP "* <\fBspace\fR>, <\fB]\fR>" 4
.IX Item "<space>, <]>"
Call the 'cursor\-pagedown' routine: move
the cursor to the next page.
.IP "* <\fB\-\fR>, <\fB[\fR>" 4
.IX Item "<->, <[>"
Call the 'cursor\-pageup' routine: move the
cursor to the previous page.
.IP "* <\fB/\fR>" 4
.IX Item "</>"
Call the 'search\-forward' routine. This will make a 'less'\-like
search system appear in the textviewer. A searchstring can be
entered. After that the user can search for the next occurance
using the 'n' key or the previous occurance using the 'N' key.
.IP "* <\fB?\fR>" 4
.IX Item "<?>"
Call the 'search\-backward' routine. This will do the same as
the 'search\-forward' routine, only it will search in the
opposite direction.
.SH "SEE ALSO"
.IX Header "SEE ALSO"
Curses::UI, 
Curses::UI::TextViewer
Curses::UI::TextEntry
Curses::UI::Widget, 
Curses::UI::Common
.SH "AUTHOR"
.IX Header "AUTHOR"
Copyright (c) 2001\-2002 Maurice Makaay. All rights reserved.
.PP
Maintained by Marcus Thiesen (marcus@cpan.thiesenweb.de)
.PP
This package is free software and is provided \*(L"as is\*(R" without express
or implied warranty. It may be used, redistributed and/or modified
under the same terms as perl itself.
