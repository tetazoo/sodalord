 XDEFUN_INTERNAL (file_in_loadpath, args,, false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} file_in_loadpath (@var{name})\n\nLook up @var{name} in Octave's @code{LOADPATH}.\n@end deftypefn\n@seealso{file_in_path}") 
 XDEFUN_INTERNAL (file_in_path, args,, false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} file_in_path (@var{path}, @var{file})\nReturn the absolute name name of @var{file} if it can be found in\n@var{path}.  The value of @var{path} should be a colon-separated list of\ndirectories in the format described for the built-in variable\n@code{LOADPATH}.\n\nIf the file cannot be found in the path, an empty matrix is returned.\nFor example,\n\n@example\nfile_in_path (LOADPATH, \"nargchk.m\")\n     @result{} \"@value{OCTAVEHOME}/share/octave/2.0/m/general/nargchk.m\"\n@end example\n@end deftypefn") 
 XDEFUN_INTERNAL (do_string_escapes, args,, false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} do_string_escapes (@var{string})\nConvert special characters in @var{string} to their escaped forms.\n@end deftypefn") 
 XDEFUN_INTERNAL (undo_string_escapes, args,, false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} undo_string_escapes (@var{s})\nConverts special characters in strings back to their escaped forms.  For\nexample, the expression\n\n@example\nbell = \"\\a\";\n@end example\n\n@noindent\nassigns the value of the alert character (control-g, ASCII code 7) to\nthe string variable @code{bell}.  If this string is printed, the\nsystem will ring the terminal bell (if it is possible).  This is\nnormally the desired outcome.  However, sometimes it is useful to be\nable to print the original representation of the string, with the\nspecial characters replaced by their escape sequences.  For example,\n\n@example\noctave:13> undo_string_escapes (bell)\nans = \\a\n@end example\n\n@noindent\nreplaces the unprintable alert character with its printable\nrepresentation.\n@end deftypefn") 
 XDEFUN_INTERNAL (ERRNO, args,, false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {@var{system_error_number}} errno ()\nReturn the current value of the system-dependent variable errno.\n@end deftypefn") 
   XDEFVAR_INTERNAL("treat_neg_dim_as_zero", SBV_treat_neg_dim_as_zero, 0.0, false, treat_neg_dim_as_zero, "-*- texinfo -*-\n@defvr {Built-in Variable} treat_neg_dim_as_zero\nIf the value of @code{treat_neg_dim_as_zero} is nonzero, expressions\nlike\n\n@example\neye (-1)\n@end example\n\n@noindent\nproduce an empty matrix (i.e., row and column dimensions are zero).\nOtherwise, an error message is printed and control is returned to the\ntop level.  The default value is 0.\n@end defvr") ;
