 XDEFUN_DLD_INTERNAL (rand, args, nargout, 0, "-*- texinfo -*-\n@deftypefn {Loadable Function} {} rand (@var{x})\n@deftypefnx {Loadable Function} {} rand (@var{n}, @var{m})\n@deftypefnx {Loadable Function} {} rand (@code{\"seed\"}, @var{x})\nReturn a matrix with random elements uniformly distributed on the\ninterval (0, 1).  The arguments are handled the same as the arguments\nfor @code{eye}.  In\naddition, you can set the seed for the random number generator using the\nform\n\n@example\nrand (\"seed\", @var{x})\n@end example\n\n@noindent\nwhere @var{x} is a scalar value.  If called as\n\n@example\nrand (\"seed\")\n@end example\n\n@noindent\n@code{rand} returns the current value of the seed.\n@end deftypefn") 
 XDEFUN_DLD_INTERNAL (randn, args, nargout, 0, "-*- texinfo -*-\n@deftypefn {Loadable Function} {} randn (@var{x})\n@deftypefnx {Loadable Function} {} randn (@var{n}, @var{m})\n@deftypefnx {Loadable Function} {} randn (@code{\"seed\"}, @var{x})\nReturn a matrix with normally distributed random elements.  The\narguments are handled the same as the arguments for @code{eye}.  In\naddition, you can set the seed for the random number generator using the\nform\n\n@example\nrandn (\"seed\", @var{x})\n@end example\n\n@noindent\nwhere @var{x} is a scalar value.  If called as\n\n@example\nrandn (\"seed\")\n@end example\n\n@noindent\n@code{randn} returns the current value of the seed.\n@end deftypefn") 
