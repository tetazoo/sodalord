## whitespace_in_literal_matrix

set test whitespace-in-literal-matrix-1
set prog_output "parse error.*"
do_test prefer-1.m

set test whitespace-in-literal-matrix-2
set prog_output "ans = 1"
do_test prefer-2.m

set test whitespace-in-literal-matrix-3
set prog_output "ans = 3"
do_test prefer-3.m

set test whitespace-in-literal-matrix-4
set prog_output "ans = 3"
do_test prefer-4.m

set test whitespace-in-literal-matrix-5
set prog_output "ans = 1"
do_test prefer-5.m

set test whitespace-in-literal-matrix-6
set prog_output "ans = 1"
do_test prefer-6.m

set test whitespace-in-literal-matrix-7
set prog_output "ans = 1"
do_test prefer-7.m

set test whitespace-in-literal-matrix-8
set prog_output "ans = 3"
do_test prefer-8.m

set test whitespace-in-literal-matrix-9
set prog_output "ans = 3"
do_test prefer-9.m

set test whitespace-in-literal-matrix-10
set prog_output "ans = 3"
do_test prefer-10.m

set test whitespace-in-literal-matrix-11
set prog_output "ans = 1"
do_test prefer-11.m

## implicit_str_to_num_ok

set test implicit-str-to-num-ok-1
set prog_output "ans = 100"
do_test prefer-12.m

set test implicit-str-to-num-ok-2
set prog_output "error:.*"
do_test prefer-13.m

## ok_to_lose_imaginary_part

set test ok-to-lose-imaginary-part-1
set prog_output "ans = 1"
do_test prefer-14.m

set test ok-to-lose-imaginary-part-2
set prog_output "error:.*"
do_test prefer-15.m

set test ok-to-lose-imaginary-part-3
set prog_output "warning:.*"
do_test prefer-16.m

## prefer_column_vectors

set test prefer-column-vectors-1
set prog_output "ans = 1"
do_test prefer-17.m

set test prefer-column-vectors-2
set prog_output "ans = 1"
do_test prefer-18.m

## print_answer_id_name

set test print-answer-id-name-1
set prog_output "1"
do_test prefer-19.m

set test print-answer-id-name-2
set prog_output "a = 1"
do_test prefer-20.m

## print_empty_dimensions

set test print-empty-dimensions-1
set prog_output "[]"
do_test prefer-21.m

set test print-empty-dimensions-2
set prog_output "[](3x0)"
do_test prefer-22.m

## propagate_empty_matrices

## This should maybe test more functions...

set test propagate-empty-matrices-1
set prog_output "error:.*"
do_test prefer-23.m

set test propagate-empty-matrices-2
set prog_output "ans = 1"
do_test prefer-24.m

## return_last_computed_value

set test return-last-computed-value-1
set prog_output "ans = 1"
do_test prefer-25.m

set test return-last-computed-value-2
set prog_output ""
do_test prefer-26.m

## save_precision

set test save-precision-1
set prog_output "3"
do_test prefer-27.m

set test save-precision-2
set prog_output "3.1416"
do_test prefer-28.m

## silent_functions

set test silent-functions-1
set prog_output "ans = 1"
do_test prefer-29.m

set test silent-functions-2
set prog_output ""
do_test prefer-30.m

## treat_neg_dim_as_zero

set test treat-neg-dim-as-zero-1
set prog_output "error:.*"
do_test prefer-31.m

set test treat-neg-dim-as-zero-2
set prog_output "warning:.*"
do_test prefer-32.m

set test treat-neg-dim-as-zero-3
set prog_output "ans = 1"
do_test prefer-33.m

## warn_assign_as_truth_value

set test warn-assign-as-truth-value-1
set prog_output ""
do_test prefer-34.m

set test warn-assign-as-truth-value-2
set prog_output "warning:.*"
do_test prefer-35.m

## warn_divide_by_zero

set test warn-divide-by-zero-1
set prog_output "ans = 1"
do_test prefer-38.m

set test warn-divide-by-zero-2
set prog_output "warning:.*"
do_test prefer-39.m
