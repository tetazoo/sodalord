 XDEFUN_INTERNAL (load, args, nargout, true, "-*- texinfo -*-\n@deffn {Command} load options file v1 v2 @dots{}\nLoad the named variables from the file @var{file}.  As with @code{save},\nyou may specify a list of variables and @code{load} will only extract\nthose variables with names that match.  For example, to restore the\nvariables saved in the file @file{data}, use the command\n\n@example\nload data\n@end example\n\nOctave will refuse to overwrite existing variables unless you use the\noption @samp{-force}.\n\nIf a variable that is not marked as global is loaded from a file when a\nglobal symbol with the same name already exists, it is loaded in the\nglobal symbol table.  Also, if a variable is marked as global in a file\nand a local symbol exists, the local symbol is moved to the global\nsymbol table and given the value from the file.  Since it seems that\nboth of these cases are likely to be the result of some sort of error,\nthey will generate warnings.\n\nIf invoked with a single output argument, Octave returns data instead\nof inserting variables in the symbol table.  If the data file contains\nonly numbers (TAB- or space-delimited columns), a matrix of values is\nreturned.  Otherwise, @code{load} returns a structure with members\n corresponding to the names of the variables in the file.\n\nThe @code{load} command can read data stored in Octave's text and\nbinary formats, and @sc{Matlab}'s binary format.  It will automatically\ndetect the type of file and do conversion from different floating point\nformats (currently only IEEE big and little endian, though other formats\nmay added in the future).\n\nValid options for @code{load} are listed in the following table.\n\n@table @code\n@item -force\nForce variables currently in memory to be overwritten by variables with\nthe same name found in the file.\n\n@item -ascii\nForce Octave to assume the file is in Octave's text format.\n\n@item -binary\nForce Octave to assume the file is in Octave's binary format.\n\n@item -mat-binary\nForce Octave to assume the file is in @sc{Matlab}'s binary format.\n\n@item -mat4-binary\nForce Octave to assume the file is in the binary format written by\n@sc{Matlab} version 4.\n\n@item -hdf5\nForce Octave to assume the file is in HDF5 format.\n(HDF5 is a free, portable binary format developed by the National\nCenter for Supercomputing Applications at the University of Illinois.)\nNote that Octave can read HDF5 files not created by itself, but may\nskip some datasets in formats that it cannot support.\n" "\nHDF5 load and save are not available, as this Octave executable was\nnot linked with the HDF5 library." "\n@item -import\nThe @samp{-import} is acceptted but ignored for backward compatiability.\nOctave can now support multi-dimensional HDF data and automatically modifies\nvariable names if they are invalid Octave identifiers.\n\n@end table\n@end deffn") 
 XDEFUN_INTERNAL (save, args, , true, "-*- texinfo -*-\n@deffn {Command} save options file v1 v2 @dots{}\nSave the named variables @var{v1}, @var{v2}, @dots{} in the file\n@var{file}.  The special filename @samp{-} can be used to write the\noutput to your terminal.  If no variable names are listed, Octave saves\nall the variables in the current scope.  Valid options for the\n@code{save} command are listed in the following table.  Options that\nmodify the output format override the format specified by the built-in\nvariable @code{default_save_format}.\n\n@table @code\n@item -ascii\nSave the data in Octave's text data format.\n\n@item -binary\nSave the data in Octave's binary data format.\n\n@item -float-binary\nSave the data in Octave's binary data format but only using single\nprecision.  You should use this format only if you know that all the\nvalues to be saved can be represented in single precision.\n\n@item -mat-binary\nSave the data in @sc{Matlab}'s binary data format.\n\n@item -mat4-binary\nSave the data in the binary format written by @sc{Matlab} version 4.\n\n@item -hdf5\nSave the data in HDF5 format.\n(HDF5 is a free, portable binary format developed by the National\nCenter for Supercomputing Applications at the University of Illinois.)\n" "\nHDF5 load and save are not available, as this Octave executable was\nnot linked with the HDF5 library." "\n@item -float-hdf5\nSave the data in HDF5 format but only using single precision.\nYou should use this format only if you know that all the\nvalues to be saved can be represented in single precision.\n\n@item -save-builtins\nForce Octave to save the values of built-in variables too.  By default,\nOctave does not save built-in variables.\n@end table\n\nThe list of variables to save may include wildcard patterns containing\nthe following special characters:\n@table @code\n@item ?\nMatch any single character.\n\n@item *\nMatch zero or more characters.\n\n@item [ @var{list} ]\nMatch the list of characters specified by @var{list}.  If the first\ncharacter is @code{!} or @code{^}, match all characters except those\nspecified by @var{list}.  For example, the pattern @samp{[a-zA-Z]} will\nmatch all lower and upper case alphabetic characters. \n@end table\n\nExcept when using the @sc{Matlab} binary data file format, saving global\nvariables also saves the global status of the variable, so that if it is\nrestored at a later time using @samp{load}, it will be restored as a\nglobal variable.\n\nThe command\n\n@example\nsave -binary data a b*\n@end example\n\n@noindent\nsaves the variable @samp{a} and all variables beginning with @samp{b} to\nthe file @file{data} in Octave's binary format.\n@end deffn") 
   XDEFVAR_INTERNAL("crash_dumps_octave_core", SBV_crash_dumps_octave_core, true, false, crash_dumps_octave_core, "-*- texinfo -*-\n@defvr {Built-in Variable} crash_dumps_octave_core\nIf this variable is set to a nonzero value, Octave tries to save all\ncurrent variables the the file \"octave-core\" if it crashes or receives a\nhangup, terminate or similar signal.  The default value is 1.\n@seealso{octave_core_file_limit, octave_core_file_name, and octave_core_file_format}\n@end defvr") ;
   XDEFVAR_INTERNAL("default_save_format", SBV_default_save_format, "ascii", false, default_save_format, "-*- texinfo -*-\n@defvr {Built-in Variable} default_save_format\nThis variable specifies the default format for the @code{save} command.\nIt should have one of the following values: @code{\"ascii\"},\n@code{\"binary\"}, @code{float-binary}, or @code{\"mat-binary\"}.  The\ninitial default save format is Octave's text format.\n@end defvr") ;
   XDEFVAR_INTERNAL("octave_core_file_limit", SBV_octave_core_file_limit, -1.0, false, octave_core_file_limit, "-*- texinfo -*-\n@defvr {Built-in Variable} octave_core_file_limit\nThe maximum amount of memory (in kilobytes) of the top-level workspace\nthat Octave will attempt to write when saving data to the\n@var{octave_core_file_name}.  If @var{octave_core_file_format} is a\nbinary format, then @var{octave_core_file_limit} will be approximately\nthe maximum size of the file.  If a text file format is used, then the\nfile could be much larger than the limit.\nThe default value is -1 (unlimited)\n@seealso{crash_dumps_octave_core, octave_core_file_name, and octave_core_file_format}\n@end defvr") ;
   XDEFVAR_INTERNAL("octave_core_file_name", SBV_octave_core_file_name, "octave-core", false, octave_core_file_name, "-*- texinfo -*-\n@defvr {Built-in Variable} octave_core_file_name\nThe name of the file used for saving data from the top-level workspace\nwhen Octave aborts.  The default value is @code{\"octave-core\"}\n@seealso{crash_dumps_octave_core, octave_core_file_name, and octave_core_file_format}\n@end defvr") ;
   XDEFVAR_INTERNAL("octave_core_file_format", SBV_octave_core_file_format, "binary", false, octave_core_file_format, "-*- texinfo -*-\n@defvr {Built-in Variable} octave_core_file_format\nIf Octave aborts, it attempts to save the contents of the top-level\nworkspace in a file using this format.  The value of\n@code{octave_core_file_format} should have one of the following values:\n@code{\"ascii\"}, @code{\"binary\"}, @code{float-binary}, or\n@code{\"mat-binary\"}.  The default value is Octave's binary format.\n@seealso{crash_dumps_octave_core, octave_core_file_name, and octave_core_file_limit}\n@end defvr") ;
   XDEFVAR_INTERNAL("save_header_format_string", SBV_save_header_format_string, default_save_header_format (), false, save_header_format_string, "-*- texinfo -*-\n@defvr {Built-in Variable} save_header_format_string\nThis variable specifies the the format string for the comment line\nthat is written at the beginning of text-format data files saved by\nOctave.  The format string is passed to @code{strftime} and should\nbegin with the character @samp{#} and contain no newline characters.\nIf the value of @code{save_header_format_string} is the empty string,\nthe header comment is omitted from text-format data files.  The\ndefault value is\n\n@example\n\"# Created by Octave VERSION, %a %b %d %H:%M:%S %Y %Z <USER@@HOST>\"\n@end example\n@seealso{strftime}\n@end defvr") ;
