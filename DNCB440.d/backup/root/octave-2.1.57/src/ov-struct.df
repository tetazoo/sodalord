 XDEFUN_INTERNAL (struct, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} struct (\"field\", @var{value}, \"field\", @var{value}, @dots{})\n\nCreate a structure and initialize its value.\n\nIf the values are cell arrays, create a structure array and initialize\nits values.  The dimensions of each cell array of values must match.\nSingleton cells and non-cell values are repeated so that they fill\nthe entire array.  If the cells are empty, create an empty structure\narray with the specified field names.") 
 XDEFUN_INTERNAL (isstruct, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} isstruct (@var{expr})\nReturn 1 if the value of the expression @var{expr} is a structure.\n@end deftypefn") 
 XDEFUN_INTERNAL (fieldnames, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} fieldnames (@var{struct})\nReturn a cell array of strings naming the elements of the structure\n@var{struct}.  It is an error to call @code{fieldnames} with an\nargument that is not a structure.\n@end deftypefn") 
 XDEFUN_INTERNAL (isfield, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} isfield (@var{expr}, @var{name})\nReturn true if the expression @var{expr} is a structure and it includes an\nelement named @var{name}.  The first argument must be a structure and\nthe second must be a string.\n@end deftypefn") 
 XDEFUN_INTERNAL (cell2struct, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} cell2struct (@var{cell}, @var{fields}, @var{dim})\nConvert @var{cell} to a structure. The number of fields in @var{fields}\nmust match the number of elements in @var{cell} along dimension @var{dim},\nthat is @code{numel (@var{fields}) == size (@var{cell}, @var{dim})}.\n\n@example\n@group\nA = cell2struct(@{'Peter', 'Hannah', 'Robert'; 185, 170, 168@}, @{'Name','Height'@}, 1);\nA(1)\n@result{} ans =\n      @{\n        Height = 185\n        Name   = Peter\n      @}\n\n@end group\n@end example\n@end deftypefn") 
 XDEFUN_INTERNAL (rmfield, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} rmfield (@var{s}, @var{f})\nRemove field @var{f} from the structure @var{s}.  If @var{f} is a\ncell array of character strings or a character array, remove the\nnamed fields.\n@end deftypefn\n@seealso{cellstr, iscellstr, and setfield") 
