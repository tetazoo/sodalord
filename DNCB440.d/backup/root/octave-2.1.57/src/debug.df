 XDEFUN_INTERNAL (dbstop, args, , true, "-*- texinfo -*-\n@deftypefn {Loadable Function} {rline =} dbstop (func, line)\nSet a breakpoint in a function\n@table @code\n@item func\nString representing the function name.  When already in debug\nmode this should be left out and only the line should be given.\n@item line\nLine you would like the breakpoint to be set on\n@end table\n\nThe rline returned is the real line that the breakpoint was set at.\n\n@end deftypefn\n@seealso{dbclear, dbstatus, dbnext}") 
 XDEFUN_INTERNAL (dbclear, args, , true, "-*- texinfo -*-\n@deftypefn {Loadable Function} {} dbclear (func, line)\nDelete a breakpoint in a function\n@table @code\n@item func\nString representing the function name.  When already in debug\nmode this should be left out and only the line should be given.\n@item line\nLine where you would like to remove the the breakpoint\n@end table\nNo checking is done to make sure that the line you requested is really\na breakpoint.   If you get the wrong line nothing will happen.\n@end deftypefn\n@seealso{dbstop, dbstatus, dbwhere}") 
 XDEFUN_INTERNAL (dbstatus, args, , true, "-*- texinfo -*-\n@deftypefn {Loadable Function} {lst =} dbstatus ([func])\nReturn a vector containing the lines on which a function has \nbreakpoints set.\n@table @code\n@item func\nString representing the function name.  When already in debug\nmode this should be left out.\n@end table\n@end deftypefn\n@seealso{dbclear, dbwhere}") 
 XDEFUN_INTERNAL (dbwhere, , , true, "-*- texinfo -*-\n@deftypefn {Loadable Function} {} dbwhere ()\nShow where we are in the code\n@end deftypefn\n@seealso{dbclear, dbstatus, dbstop}") 
 XDEFUN_INTERNAL (dbtype, args, , true, "-*- texinfo -*-\n@deftypefn {Loadable Function} {} dbtype ()\nList script file with line numbers.\n@end deftypefn\n@seealso{dbclear, dbstatus, dbstop}") 
