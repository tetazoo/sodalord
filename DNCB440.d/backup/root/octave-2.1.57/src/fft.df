 XDEFUN_DLD_INTERNAL (fft, args, , 0, "-*- texinfo -*-\n@deftypefn {Loadable Function} {} fft (@var{a}, @var{n}, @var{dim})\nCompute the FFT of @var{a} using subroutines from\n" "@sc{Fftpack}" ". The FFT is calculated along the first non-singleton dimension of the\narray. Thus if @var{a} is a matrix, @code{fft (@var{a})} computes the\nFFT for each column of @var{a}.\n\nIf called with two arguments, @var{n} is expected to be an integer\nspecifying the number of elements of @var{a} to use, or an empty\nmatrix to specify that its value should be ignored. If @var{n} is\nlarger than the dimension along which the FFT is calculated, then\n@var{a} is resized and padded with zeros. Otherwise, if@var{n} is\nsmaller than the dimension along which the FFT is calculated, then\n@var{a} is truncated.\n\nIf called with three agruments, @var{dim} is an integer specifying the\ndimension of the matrix along which the FFT is performed\n@end deftypefn\n@seealso {ifft, fft2, fftn, fftw_wisdom}") 
 XDEFUN_DLD_INTERNAL (ifft, args, , 0, "-*- texinfo -*-\n@deftypefn {Loadable Function} {} ifft (@var{a}, @var{n}, @var{dim})\nCompute the inverse FFT of @var{a} using subroutines from\n" "@sc{Fftpack}" ". The inverse FFT is calculated along the first non-singleton dimension\nof the array. Thus if @var{a} is a matrix, @code{fft (@var{a})} computes\nthe inverse FFT for each column of @var{a}.\n\nIf called with two arguments, @var{n} is expected to be an integer\nspecifying the number of elements of @var{a} to use, or an empty\nmatrix to specify that its value should be ignored. If @var{n} is\nlarger than the dimension along which the inverse FFT is calculated, then\n@var{a} is resized and padded with zeros. Otherwise, if@var{n} is\nsmaller than the dimension along which the inverse FFT is calculated,\nthen @var{a} is truncated.\n\nIf called with three agruments, @var{dim} is an integer specifying the\ndimension of the matrix along which the inverse FFT is performed\n@end deftypefn\n@seealso {fft, ifft2, ifftn, fftw_wisdom}") 
