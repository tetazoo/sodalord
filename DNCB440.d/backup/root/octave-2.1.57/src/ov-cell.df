 XDEFUN_INTERNAL (iscell, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} iscell (@var{x})\nReturn true if @var{x} is a cell array object.  Otherwise, return\nfalse.\n@end deftypefn") 
 XDEFUN_INTERNAL (cell, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} cell (@var{x})\n@deftypefnx {Built-in Function} {} cell (@var{n}, @var{m})\nCreate a new cell array object.  If invoked with a single scalar\nargument, @code{cell} returns a square cell array with the dimension\nspecified.  If you supply two scalar arguments, @code{cell} takes\nthem to be the number of rows and columns.  If given a vector with two\nelements, @code{cell} uses the values of the elements as the number of\nrows and columns, respectively.\n@end deftypefn") 
 XDEFUN_INTERNAL (iscellstr, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} iscellstr (@var{cell})\nReturn true if every element of the cell array @var{cell} is a\ncharacter string\n@end deftypefn") 
 XDEFUN_INTERNAL (cellstr, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} cellstr (@var{string})\nCreate a new cell array object from the elements of the string\narray @var{string}.\n@end deftypefn") 
 XDEFUN_INTERNAL (struct2cell, args, , false, "-*- texinfo -*-\n@deftypefn {Built-in Function} {} struct2cell (@var{S})\nCreate a new cell array from the objects stored in the struct object.\nIf @var{f} is the number of fields in the structure, the resulting\ncell array will have a dimension vector corresponding to\n@code{[@var{F} size(@var{S})]}.\n@end deftypefn\n@seealso{cell2struct, fieldnames}") 
